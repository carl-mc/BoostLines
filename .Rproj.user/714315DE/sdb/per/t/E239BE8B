{
    "collab_server" : "",
    "contents" : "library(BoostLines)\nlibrary(sp)\nlibrary(rgeos)\n\n\n############################################################################\n# HIGH-LEVEL TESTS\n############################################################################\n\n########### Boost / Unboost\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\nplot(test.sl)\ntest.bl <- BoostLines(test.sl)\ntest.sl <- unboost(test.bl)\nplot(test.sl, add=TRUE, col='red')\n\n########### Noding\n## Regular intersection\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Intersection at redundant intermediate point\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0.5,0.5), c(1,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Intersection at intermediate point\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0.5,0.5), c(0.5,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Intersection at two intermediate points\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0.5,0.5), c(0.5,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(0.5,0.5), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Intersection at start point\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Intersection at end point\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(1,0), c(1,1)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Two intersections\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,1)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,0.25), c(1,0.25), c(1,0.75), c(0,0.75)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Touches\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,0)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0.5,0.5), c(0.5,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Touches at intermediate point\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0.5,0), c(1,0)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0.5,0.5), c(0.5,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## No intersection\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(1,0)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0,1), c(1,1)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n## Improper collinear intersection\nls <- list(Lines(slinelist = list(Line(coords = rbind(c(0,0), c(0.5,0)))), ID = 1),\n           Lines(slinelist = list(Line(coords = rbind(c(0.25,0), c(0.75,0)))), ID = 2))\ntest.sl <- SpatialLines(ls)\ntest.bl <- BoostLines(test.sl)\nnode_ls <- bNode(test.bl)\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=rainbow(length(noded.sl)), lwd=3)\n\n\n\n## Large-scale timing\nset.seed(0)\nN <- 250\nlines.ls <- vector('list', N)\nfor (i in 1:N) {\n  strt <- runif(1)\n  range <- runif(1)\n  coords <- matrix(runif(4, strt, strt+range), 2, 2)\n  lines.ls[[i]] <- Lines(slinelist = list(Line(coords = coords)), ID = i)\n}\ntest.sl <- SpatialLines(lines.ls)\nplot(test.sl)\n\ntest.bl <- BoostLines(test.sl)\nsystem.time(node_ls <- bNode(test.bl))\n# user  system elapsed\n# 0.168   0.000   0.165\nnoded.sl <- unboost(node_ls[[1]])\nnoded.ids <- node_ls[[2]]\nlength(noded.ids)\nplot(noded.sl, col=sample(colors(), length(noded.sl), replace=TRUE))\n\nplot(test.sl, col='white')\nplot(test.sl[100,], add=TRUE)\nplot(noded.sl[noded.ids==100,], add=TRUE, col='red')\n\n\n\n########### Intersection\nset.seed(0)\nN <- 5000\nlines.ls <- vector('list', N)\nfor (i in 1:N) {\n  strt <- runif(1)\n  range <- runif(1)\n  coords <- matrix(runif(4, strt, strt+range), 2, 2)\n  lines.ls[[i]] <- Lines(slinelist = list(Line(coords = coords)), ID = i)\n}\ntest.sl <- SpatialLines(lines.ls)\n\ntest.bl <- BoostLines(test.sl)\nsystem.time(bl.mat <- bIntersects(test.bl))\nsystem.time(sl.mat <- gIntersects(test.sl, byid=TRUE))\nall(sl.mat == bl.mat)\n\n\n\n########### Distance\nset.seed(0)\nN <- 5000\nlines.ls <- vector('list', N)\nfor (i in 1:N) {\n  strt <- runif(1)\n  range <- runif(1)\n  coords <- matrix(runif(4, strt, strt+range), 2, 2)\n  lines.ls[[i]] <- Lines(slinelist = list(Line(coords = coords)), ID = i)\n}\ntest.sl <- SpatialLines(lines.ls)\n\ntest.bl <- BoostLines(test.sl)\nsystem.time(bl.mat <- bDistance(test.bl))\nsystem.time(sl.mat <- gDistance(test.sl, byid=TRUE))\nhist(sl.mat - bl.mat)\n\n\n\n\n\n\n\n",
    "created" : 1490023508966.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2714065151",
    "id" : "E239BE8B",
    "lastKnownWriteTime" : 1490023921,
    "last_content_update" : 1490023921529,
    "path" : "~/Projects/BoostLines/tests/tests_bl.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}